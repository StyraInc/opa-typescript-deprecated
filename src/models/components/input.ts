/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Arbitrary JSON used within your policies by accessing `input`
 */
export type Input = boolean | string | Array<any> | number | Record<string, any>;

/** @internal */
export namespace Input$ {
    export type Inbound = boolean | string | Array<any> | number | Record<string, any>;

    export type Outbound = boolean | string | Array<any> | number | Record<string, any>;
    export const inboundSchema: z.ZodType<Input, z.ZodTypeDef, Inbound> = z.union([
        z.boolean(),
        z.string(),
        z.array(z.any()),
        z.number(),
        z.record(z.any()),
    ]);
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Input> = z.union([
        z.boolean(),
        z.string(),
        z.array(z.any()),
        z.number(),
        z.record(z.any()),
    ]);
}
